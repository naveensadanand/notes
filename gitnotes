GIT Topics.
1. init, add, commit, push, pull, branch, checkout.
2. remote
3. clone
4. fetch
5. merge
6. stash
7. revert
8. rebase
9. reset
10. squash

What is Git?
Git is a software which keeps track of changes that you make in files and directory.
-especially test changes, 
-version 1, version 2, version 3
git can track/manager above version, can allow you to move back and forth version also allows you to check diff between those versions.

Since it manages versions, so it also called Version control system (VCS).

VCS can be used to Source code management (SCM).

Git is distributed Version control.
--Different users (or teams of users) each maintain their own repositories, instead of working from central repository.
--changes are stored as "change sets" or "patches"
	-focus on tracking changes not version of the documents.
	-different from CVS and SVN, which track versions to versions.
	-change sets can be exchanged between repositories.
		-"merge-in change sets" or "apply patches"
--No single master repository, just many working copies
	-Each with their own combination of change sets.
--Imagine changes to a document as sets A,B,C,D,E,F
	-Repo 1: A,B,C,D,E,F
	-Repo 2: A,B,C,D
	-Repo 3: A,B,C,E
	-Repo 4: A,B,E,F
--No need to communicate with a central server
	-faster (communication is not required with a central server)
	-no network access required (since we are not making any communication with server).


git init:
It initialiZes git project, it will create hidden .git directory.

This will make set-up home for git repository and track all files changes in this directory (.git directory).

commands and explanation.
1. git init
	a. It initialiZes git project, it will create hidden .git directory.
	b. By default it will create branch with the name master.

2. git status
	a. It gives the information of the branch to which git is currently pointing to.
	b. It gives the list of information of files which are needs to be get add using "git add".
	c. If the file gets added then it will give list of files that needs to be commit "git commit filename".

3. git add
	a. This command add file to working directory. This file is visible to all branches created under master branch.

4. git commit:
	a. It will commit the file to the staging area under particular branch. In general it will create an object.
	b. Its mandatory to give git commit message otherwise it will through below message.	
"c:\Dropbox\GIT\notes>git commit gitnotes
 Aborting commit due to empty commit message.
"

5. git log:
	a. This command will give detail information of repository. It will give detail information like
commit ID/object, auther, Date and Git commit message as well.

   git log --oneline:
	a. This command will give one line information of each commit message.

6. git branch branchname:
	a. This command will create new branch named branchname

7. git checkout branchname.
	a. This command will switch to branch called branchname.
If there is a local changes in current branch and you want to switch to other branch, then it will allow to switch to other branch and through below error.

"error: Your local changes to the following files would be overwritten by checkout:
        gitnotes
Please commit your changes or stash them before you can switch branches.
Aborting"
